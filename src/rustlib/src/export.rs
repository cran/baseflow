// Generated by using rustinr::rustrize() -> do not edit by hand

use super::*;

#[no_mangle]
pub extern "C" fn rustr_perform_filtering_for_r(update_type : SEXP, q : SEXP, alpha : SEXP, delta_t : SEXP, first_aprils : SEXP)->SEXP{

 let update_type_ : String = unwrapr!( String::rnew(update_type) );

let q_ : Vec<f64> = unwrapr!( Vec::rnew(q) );

let alpha_ : f64 = unwrapr!( f64::rnew(alpha) );

let delta_t_ : f64 = unwrapr!( f64::rnew(delta_t) );

let first_aprils_ : Vec<usize> = unwrapr!( Vec::rnew(first_aprils) );
 let res  = unwrapr!( perform_filtering_for_r(update_type_,q_,alpha_,delta_t_,first_aprils_));

 let res_sexp : SEXP = unwrapr!(res.intor());

 return res_sexp;
}

#[no_mangle]
pub extern "C" fn rustr_bfi_for_r(update_type : SEXP, q : SEXP, alpha : SEXP, delta_t : SEXP, first_aprils : SEXP)->SEXP{

 let update_type_ : String = unwrapr!( String::rnew(update_type) );

let q_ : Vec<f64> = unwrapr!( Vec::rnew(q) );

let alpha_ : f64 = unwrapr!( f64::rnew(alpha) );

let delta_t_ : f64 = unwrapr!( f64::rnew(delta_t) );

let first_aprils_ : Vec<usize> = unwrapr!( Vec::rnew(first_aprils) );
 let res  = unwrapr!( bfi_for_r(update_type_,q_,alpha_,delta_t_,first_aprils_));

 let res_sexp : SEXP = unwrapr!(res.intor());

 return res_sexp;
}

#[no_mangle]
pub extern "C" fn rustr_criteria_for_r(update_type : SEXP, q : SEXP, alpha : SEXP, delta_t : SEXP, p : SEXP, pet : SEXP, tau : SEXP, first_aprils : SEXP)->SEXP{

 let update_type_ : String = unwrapr!( String::rnew(update_type) );

let q_ : Vec<f64> = unwrapr!( Vec::rnew(q) );

let alpha_ : f64 = unwrapr!( f64::rnew(alpha) );

let delta_t_ : f64 = unwrapr!( f64::rnew(delta_t) );

let p_ : Vec<f64> = unwrapr!( Vec::rnew(p) );

let pet_ : Vec<f64> = unwrapr!( Vec::rnew(pet) );

let tau_ : f64 = unwrapr!( f64::rnew(tau) );

let first_aprils_ : Vec<usize> = unwrapr!( Vec::rnew(first_aprils) );
 let res  = unwrapr!( criteria_for_r(update_type_,q_,alpha_,delta_t_,p_,pet_,tau_,first_aprils_));

 let res_sexp : SEXP = unwrapr!(res.intor());

 return res_sexp;
}

#[no_mangle]
pub extern "C" fn rustr_criteria_vector_for_r(update_type : SEXP, q : SEXP, alphas : SEXP, delta_t : SEXP, p : SEXP, pet : SEXP, taus : SEXP, first_aprils : SEXP)->SEXP{

 let update_type_ : String = unwrapr!( String::rnew(update_type) );

let q_ : Vec<f64> = unwrapr!( Vec::rnew(q) );

let alphas_ : Vec<f64> = unwrapr!( Vec::rnew(alphas) );

let delta_t_ : f64 = unwrapr!( f64::rnew(delta_t) );

let p_ : Vec<f64> = unwrapr!( Vec::rnew(p) );

let pet_ : Vec<f64> = unwrapr!( Vec::rnew(pet) );

let taus_ : Vec<f64> = unwrapr!( Vec::rnew(taus) );

let first_aprils_ : Vec<usize> = unwrapr!( Vec::rnew(first_aprils) );
 let res  = unwrapr!( criteria_vector_for_r(update_type_,q_,alphas_,delta_t_,p_,pet_,taus_,first_aprils_));

 let res_sexp : SEXP = unwrapr!(res.intor());

 return res_sexp;
}

